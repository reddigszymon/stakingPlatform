/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  StakingRewards,
  StakingRewardsInterface,
} from "../../../contracts/StakingRewards.sol/StakingRewards";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MAX_AMOUNT_STAKE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_NUM_OF_TOKENS_IN_POOL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "changePoolLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "changeStakeLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finishAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFinishAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakeLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokensDepositedForRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUpdatedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "notifyRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "recoverERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "secondsLeftTillNewRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updatedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620022353803806200223583398181016040528101906200003791906200015a565b600160008190555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505050620001a1565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200012282620000f5565b9050919050565b620001348162000115565b81146200014057600080fd5b50565b600081519050620001548162000129565b92915050565b60008060408385031215620001745762000173620000f0565b5b6000620001848582860162000143565b9250506020620001978582860162000143565b9150509250929050565b60805160a051612044620001f1600039600081816109590152818161153201526116fb015260008181610c0901528181610d7c01528181610ef90152818161127a01526115e101526120446000f3fe608060405234801561001057600080fd5b50600436106101fa5760003560e01c806380faa57d1161011a578063c4e41b22116100ad578063d1af0c7d1161007c578063d1af0c7d1461056f578063df136d651461058d578063e8355853146105ab578063f7a54c80146105c9578063faed65ce146105e7576101fa565b8063c4e41b221461050b578063c885bc5814610529578063cb6aad9c14610533578063cd3daf9d14610551576101fa565b80638da5cb5b116100e95780638da5cb5b14610495578063a694fc3a146104b3578063ad2e8c9b146104cf578063bcebf00d146104ed576101fa565b806380faa57d1461040d57806382a808901461042b5780638980f11f146104495780638b87634714610465576101fa565b806363760f73116101925780637519ab50116101615780637519ab501461039757806377099928146103b55780637b0a47ee146103d15780637e1a3786146103ef576101fa565b806363760f731461030f57806367d3b4881461032b57806370a082311461034957806372f702f314610379576101fa565b8063246132f9116101ce578063246132f91461029b5780632e1a7d4d146102b75780633d07dfec146102d357806340224d19146102f1576101fa565b80628cc262146101ff5780630700037d1461022f5780630fb5a6b41461025f57806318160ddd1461027d575b600080fd5b61021960048036038101906102149190611833565b610605565b6040516102269190611879565b60405180910390f35b61024960048036038101906102449190611833565b610707565b6040516102569190611879565b60405180910390f35b61026761071f565b6040516102749190611879565b60405180910390f35b610285610725565b6040516102929190611879565b60405180910390f35b6102b560048036038101906102b091906118c0565b61072b565b005b6102d160048036038101906102cc9190611900565b610a69565b005b6102db610cb2565b6040516102e89190611879565b60405180910390f35b6102f9610cb8565b6040516103069190611879565b60405180910390f35b61032960048036038101906103249190611900565b610cc2565b005b610333610d5c565b6040516103409190611879565b60405180910390f35b610363600480360381019061035e9190611833565b610d62565b6040516103709190611879565b60405180910390f35b610381610d7a565b60405161038e919061198c565b60405180910390f35b61039f610d9e565b6040516103ac9190611879565b60405180910390f35b6103cf60048036038101906103ca9190611900565b610da4565b005b6103d9610e3e565b6040516103e69190611879565b60405180910390f35b6103f7610e44565b6040516104049190611879565b60405180910390f35b610415610e4e565b6040516104229190611879565b60405180910390f35b610433610e61565b6040516104409190611879565b60405180910390f35b610463600480360381019061045e91906119a7565b610e67565b005b61047f600480360381019061047a9190611833565b61102a565b60405161048c9190611879565b60405180910390f35b61049d611042565b6040516104aa91906119f6565b60405180910390f35b6104cd60048036038101906104c89190611900565b611068565b005b6104d7611394565b6040516104e49190611879565b60405180910390f35b6104f561139e565b6040516105029190611879565b60405180910390f35b6105136113a8565b6040516105209190611879565b60405180910390f35b6105316113b2565b005b61053b6115dc565b6040516105489190611879565b60405180910390f35b61055961168f565b6040516105669190611879565b60405180910390f35b6105776116f9565b604051610584919061198c565b60405180910390f35b61059561171d565b6040516105a29190611879565b60405180910390f35b6105b3611723565b6040516105c09190611879565b60405180910390f35b6105d161172d565b6040516105de9190611879565b60405180910390f35b6105ef611737565b6040516105fc9190611879565b60405180910390f35b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054670de0b6b3a7640000600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461069861168f565b6106a29190611a40565b600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106ec9190611a74565b6106f69190611ae5565b6107009190611b16565b9050919050565b600b6020528060005260406000206000915090505481565b60025481565b60075481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b290611ba7565b60405180910390fd5b60006107c561168f565b6006819055506107d3610e4e565b600481905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108a05761081681610605565b600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600654600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000600254036108b257816002819055505b60035442106108d25781836108c79190611ae5565b600581905550610912565b6000600554426003546108e59190611a40565b6108ef9190611a74565b905060025481856109009190611b16565b61090a9190611ae5565b600581905550505b600060055411610957576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094e90611c13565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109b091906119f6565b602060405180830381865afa1580156109cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f19190611c48565b600254600554610a019190611a74565b1115610a42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3990611cc1565b60405180910390fd5b8160028190555060025442610a579190611b16565b60038190555042600481905550505050565b610a7161175d565b33610a7a61168f565b600681905550610a88610e4e565b600481905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b5557610acb81610605565b600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600654600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60008211610b98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8f90611d2d565b60405180910390fd5b81600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610be79190611a40565b925050819055508160076000828254610c009190611a40565b925050819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610c62929190611d4d565b6020604051808303816000875af1158015610c81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca59190611dae565b5050610caf6117ac565b50565b60095481565b6000600354905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4990611ba7565b60405180910390fd5b8060098190555050565b60035481565b600c6020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60045481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2b90611ba7565b60405180910390fd5b8060088190555050565b60055481565b6000600554905090565b6000610e5c600354426117b6565b905090565b60085481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ef7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eee90611ba7565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7c90611e4d565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401610fe2929190611d4d565b6020604051808303816000875af1158015611001573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110259190611dae565b505050565b600a6020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61107061175d565b3361107961168f565b600681905550611087610e4e565b600481905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611154576110ca81610605565b600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600654600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60008211611197576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118e90611d2d565b60405180910390fd5b60085482600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111e59190611b16565b1115611226576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121d90611eb9565b60405180910390fd5b600954826007546112379190611b16565b1115611278576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126f90611f4b565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016112d593929190611f6b565b6020604051808303816000875af11580156112f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113189190611dae565b5081600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113689190611b16565b9250508190555081600760008282546113819190611b16565b92505081905550506113916117ac565b50565b6000600254905090565b6000600854905090565b6000600754905090565b6113ba61175d565b336113c361168f565b6006819055506113d1610e4e565b600481905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461149e5761141481610605565b600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600654600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111156115d0576000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161158b929190611d4d565b6020604051808303816000875af11580156115aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ce9190611dae565b505b50506115da6117ac565b565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161163891906119f6565b602060405180830381865afa158015611655573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116799190611c48565b9050600754816116899190611a40565b91505090565b600080600754036116a45760065490506116f6565b600754670de0b6b3a76400006004546116bb610e4e565b6116c59190611a40565b6005546116d29190611a74565b6116dc9190611a74565b6116e69190611ae5565b6006546116f39190611b16565b90505b90565b7f000000000000000000000000000000000000000000000000000000000000000081565b60065481565b6000600454905090565b6000600954905090565b6000426003541061175557426003546117509190611a40565b611758565b60005b905090565b6002600054036117a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179990611fee565b60405180910390fd5b6002600081905550565b6001600081905550565b6000818311156117c657816117c8565b825b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611800826117d5565b9050919050565b611810816117f5565b811461181b57600080fd5b50565b60008135905061182d81611807565b92915050565b600060208284031215611849576118486117d0565b5b60006118578482850161181e565b91505092915050565b6000819050919050565b61187381611860565b82525050565b600060208201905061188e600083018461186a565b92915050565b61189d81611860565b81146118a857600080fd5b50565b6000813590506118ba81611894565b92915050565b600080604083850312156118d7576118d66117d0565b5b60006118e5858286016118ab565b92505060206118f6858286016118ab565b9150509250929050565b600060208284031215611916576119156117d0565b5b6000611924848285016118ab565b91505092915050565b6000819050919050565b600061195261194d611948846117d5565b61192d565b6117d5565b9050919050565b600061196482611937565b9050919050565b600061197682611959565b9050919050565b6119868161196b565b82525050565b60006020820190506119a1600083018461197d565b92915050565b600080604083850312156119be576119bd6117d0565b5b60006119cc8582860161181e565b92505060206119dd858286016118ab565b9150509250929050565b6119f0816117f5565b82525050565b6000602082019050611a0b60008301846119e7565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a4b82611860565b9150611a5683611860565b9250828203905081811115611a6e57611a6d611a11565b5b92915050565b6000611a7f82611860565b9150611a8a83611860565b9250828202611a9881611860565b91508282048414831517611aaf57611aae611a11565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611af082611860565b9150611afb83611860565b925082611b0b57611b0a611ab6565b5b828204905092915050565b6000611b2182611860565b9150611b2c83611860565b9250828201905080821115611b4457611b43611a11565b5b92915050565b600082825260208201905092915050565b7f6e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b6000611b91600e83611b4a565b9150611b9c82611b5b565b602082019050919050565b60006020820190508181036000830152611bc081611b84565b9050919050565b7f7265776172642072617465203d20300000000000000000000000000000000000600082015250565b6000611bfd600f83611b4a565b9150611c0882611bc7565b602082019050919050565b60006020820190508181036000830152611c2c81611bf0565b9050919050565b600081519050611c4281611894565b92915050565b600060208284031215611c5e57611c5d6117d0565b5b6000611c6c84828501611c33565b91505092915050565b7f72657761726420616d6f756e74203e2062616c616e6365000000000000000000600082015250565b6000611cab601783611b4a565b9150611cb682611c75565b602082019050919050565b60006020820190508181036000830152611cda81611c9e565b9050919050565b7f616d6f756e74203d203000000000000000000000000000000000000000000000600082015250565b6000611d17600a83611b4a565b9150611d2282611ce1565b602082019050919050565b60006020820190508181036000830152611d4681611d0a565b9050919050565b6000604082019050611d6260008301856119e7565b611d6f602083018461186a565b9392505050565b60008115159050919050565b611d8b81611d76565b8114611d9657600080fd5b50565b600081519050611da881611d82565b92915050565b600060208284031215611dc457611dc36117d0565b5b6000611dd284828501611d99565b91505092915050565b7f43616e6e6f7420776974686472617720746865207374616b696e6720746f6b6560008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000611e37602183611b4a565b9150611e4282611ddb565b604082019050919050565b60006020820190508181036000830152611e6681611e2a565b9050919050565b7f546f6f206d756368207374616b65642100000000000000000000000000000000600082015250565b6000611ea3601083611b4a565b9150611eae82611e6d565b602082019050919050565b60006020820190508181036000830152611ed281611e96565b9050919050565b7f4d6178696d756d206e756d626572206f6620746f6b656e73207374616b65642060008201527f686173206265656e207265616368656421000000000000000000000000000000602082015250565b6000611f35603183611b4a565b9150611f4082611ed9565b604082019050919050565b60006020820190508181036000830152611f6481611f28565b9050919050565b6000606082019050611f8060008301866119e7565b611f8d60208301856119e7565b611f9a604083018461186a565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611fd8601f83611b4a565b9150611fe382611fa2565b602082019050919050565b6000602082019050818103600083015261200781611fcb565b905091905056fea2646970667358221220f4e07baeb9a66e7e7a88d74c09b9e04d7f72d958222918eb608bacc50576c4c764736f6c63430008120033";

type StakingRewardsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingRewardsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakingRewards__factory extends ContractFactory {
  constructor(...args: StakingRewardsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _stakingToken: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StakingRewards> {
    return super.deploy(
      _stakingToken,
      _rewardToken,
      overrides || {}
    ) as Promise<StakingRewards>;
  }
  override getDeployTransaction(
    _stakingToken: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakingToken,
      _rewardToken,
      overrides || {}
    );
  }
  override attach(address: string): StakingRewards {
    return super.attach(address) as StakingRewards;
  }
  override connect(signer: Signer): StakingRewards__factory {
    return super.connect(signer) as StakingRewards__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingRewardsInterface {
    return new utils.Interface(_abi) as StakingRewardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingRewards {
    return new Contract(address, _abi, signerOrProvider) as StakingRewards;
  }
}
