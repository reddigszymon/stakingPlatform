/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  StakingRewards,
  StakingRewardsInterface,
} from "../../../contracts/StakingRewards.sol/StakingRewards";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MAX_AMOUNT_STAKE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_NUM_OF_TOKENS_IN_POOL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "changePoolLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "changeStakeLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finishAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFinishAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakeLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokensDepositedForRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokensEarnedByStakers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUpdatedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "notifyRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "recoverERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "secondsLeftTillNewRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updatedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userStaked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620027233803806200272383398181016040528101906200003791906200015a565b600160008190555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505050620001a1565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200012282620000f5565b9050919050565b620001348162000115565b81146200014057600080fd5b50565b600081519050620001548162000129565b92915050565b60008060408385031215620001745762000173620000f0565b5b6000620001848582860162000143565b9250506020620001978582860162000143565b9150509250929050565b60805160a051612532620001f160003960008181610a0c015281816117e10152611a04015260008181610cbf01528181610e7401528181610ff1015281816113fa01526118d201526125326000f3fe608060405234801561001057600080fd5b50600436106102105760003560e01c806382a8089011610125578063c4e41b22116100ad578063d1af0c7d1161007c578063d1af0c7d146105d3578063df136d65146105f1578063e83558531461060f578063f7a54c801461062d578063faed65ce1461064b57610210565b8063c4e41b221461056f578063c885bc581461058d578063cb6aad9c14610597578063cd3daf9d146105b557610210565b80638e831947116100f45780638e831947146104c9578063a694fc3a146104e7578063acc3a93914610503578063ad2e8c9b14610533578063bcebf00d1461055157610210565b806382a80890146104415780638980f11f1461045f5780638b8763471461047b5780638da5cb5b146104ab57610210565b806363760f73116101a85780637519ab50116101775780637519ab50146103ad57806377099928146103cb5780637b0a47ee146103e75780637e1a37861461040557806380faa57d1461042357610210565b806363760f731461032557806367d3b4881461034157806370a082311461035f57806372f702f31461038f57610210565b8063246132f9116101e4578063246132f9146102b15780632e1a7d4d146102cd5780633d07dfec146102e957806340224d191461030757610210565b80628cc262146102155780630700037d146102455780630fb5a6b41461027557806318160ddd14610293575b600080fd5b61022f600480360381019061022a9190611b3c565b610669565b60405161023c9190611b82565b60405180910390f35b61025f600480360381019061025a9190611b3c565b61076b565b60405161026c9190611b82565b60405180910390f35b61027d610783565b60405161028a9190611b82565b60405180910390f35b61029b610789565b6040516102a89190611b82565b60405180910390f35b6102cb60048036038101906102c69190611bc9565b61078f565b005b6102e760048036038101906102e29190611c09565b610b1d565b005b6102f1610daa565b6040516102fe9190611b82565b60405180910390f35b61030f610db0565b60405161031c9190611b82565b60405180910390f35b61033f600480360381019061033a9190611c09565b610dba565b005b610349610e54565b6040516103569190611b82565b60405180910390f35b61037960048036038101906103749190611b3c565b610e5a565b6040516103869190611b82565b60405180910390f35b610397610e72565b6040516103a49190611c95565b60405180910390f35b6103b5610e96565b6040516103c29190611b82565b60405180910390f35b6103e560048036038101906103e09190611c09565b610e9c565b005b6103ef610f36565b6040516103fc9190611b82565b60405180910390f35b61040d610f3c565b60405161041a9190611b82565b60405180910390f35b61042b610f46565b6040516104389190611b82565b60405180910390f35b610449610f59565b6040516104569190611b82565b60405180910390f35b61047960048036038101906104749190611cb0565b610f5f565b005b61049560048036038101906104909190611b3c565b611122565b6040516104a29190611b82565b60405180910390f35b6104b361113a565b6040516104c09190611cff565b60405180910390f35b6104d1611160565b6040516104de9190611b82565b60405180910390f35b61050160048036038101906104fc9190611c09565b6111e8565b005b61051d60048036038101906105189190611b3c565b611621565b60405161052a9190611d35565b60405180910390f35b61053b611641565b6040516105489190611b82565b60405180910390f35b61055961164b565b6040516105669190611b82565b60405180910390f35b610577611655565b6040516105849190611b82565b60405180910390f35b61059561165f565b005b61059f6118cd565b6040516105ac9190611b82565b60405180910390f35b6105bd611998565b6040516105ca9190611b82565b60405180910390f35b6105db611a02565b6040516105e89190611c95565b60405180910390f35b6105f9611a26565b6040516106069190611b82565b60405180910390f35b610617611a2c565b6040516106249190611b82565b60405180910390f35b610635611a36565b6040516106429190611b82565b60405180910390f35b610653611a40565b6040516106609190611b82565b60405180910390f35b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054670de0b6b3a7640000600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106fc611998565b6107069190611d7f565b600d60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107509190611db3565b61075a9190611e24565b6107649190611e55565b9050919050565b600c6020528060005260406000206000915090505481565b60025481565b60075481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461081f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081690611ee6565b60405180910390fd5b6000610829611998565b600681905550610837610f46565b600481905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109045761087a81610669565b600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600654600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600061090e6118cd565b905083811015610953576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094a90611f52565b60405180910390fd5b60006002540361096557826002819055505b600354421061098557828461097a9190611e24565b6005819055506109c5565b6000600554426003546109989190611d7f565b6109a29190611db3565b905060025481866109b39190611e55565b6109bd9190611e24565b600581905550505b600060055411610a0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0190611fbe565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a639190611cff565b602060405180830381865afa158015610a80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa49190611ff3565b600254600554610ab49190611db3565b1115610af5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aec9061206c565b60405180910390fd5b8260028190555060025442610b0a9190611e55565b6003819055504260048190555050505050565b610b25611a66565b33610b2e611998565b600681905550610b3c610f46565b600481905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c0957610b7f81610669565b600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600654600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60008211610c4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c43906120d8565b60405180910390fd5b81600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c9b9190611d7f565b925050819055508160076000828254610cb49190611d7f565b9250508190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610d189291906120f8565b6020604051808303816000875af1158015610d37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5b919061214d565b905080610d9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d94906121c6565b60405180910390fd5b5050610da7611ab5565b50565b60095481565b6000600354905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4190611ee6565b60405180910390fd5b8060098190555050565b60035481565b600d6020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60045481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2390611ee6565b60405180910390fd5b8060088190555050565b60055481565b6000600554905090565b6000610f5460035442611abf565b905090565b60085481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe690611ee6565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361107d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107490612258565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016110da9291906120f8565b6020604051808303816000875af11580156110f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111d919061214d565b505050565b600b6020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060005b600a805490508110156111e05760006111bc600a838154811061118c5761118b612278565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610669565b905080836111ca9190611e55565b92505080806111d8906122a7565b915050611166565b508091505090565b6111f0611a66565b336111f9611998565b600681905550611207610f46565b600481905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146112d45761124a81610669565b600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600654600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60008211611317576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130e906120d8565b60405180910390fd5b60085482600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113659190611e55565b11156113a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139d9061233b565b60405180910390fd5b600954826007546113b79190611e55565b11156113f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ef906123cd565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401611455939291906123ed565b6020604051808303816000875af1158015611474573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611498919061214d565b5081600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546114e89190611e55565b92505081905550600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166115fc57600a339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b816007600082825461160e9190611e55565b925050819055505061161e611ab5565b50565b600e6020528060005260406000206000915054906101000a900460ff1681565b6000600254905090565b6000600854905090565b6000600754905090565b611667611a66565b33611670611998565b60068190555061167e610f46565b600481905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461174b576116c181610669565b600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600654600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111156118c1576000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161183a9291906120f8565b6020604051808303816000875af1158015611859573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061187d919061214d565b9050806118bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118b690612470565b60405180910390fd5b505b50506118cb611ab5565b565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016119299190611cff565b602060405180830381865afa158015611946573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196a9190611ff3565b90506000611976611160565b905080600754836119879190611d7f565b6119919190611d7f565b9250505090565b600080600754036119ad5760065490506119ff565b600754670de0b6b3a76400006004546119c4610f46565b6119ce9190611d7f565b6005546119db9190611db3565b6119e59190611db3565b6119ef9190611e24565b6006546119fc9190611e55565b90505b90565b7f000000000000000000000000000000000000000000000000000000000000000081565b60065481565b6000600454905090565b6000600954905090565b60004260035410611a5e5742600354611a599190611d7f565b611a61565b60005b905090565b600260005403611aab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aa2906124dc565b60405180910390fd5b6002600081905550565b6001600081905550565b600081831115611acf5781611ad1565b825b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b0982611ade565b9050919050565b611b1981611afe565b8114611b2457600080fd5b50565b600081359050611b3681611b10565b92915050565b600060208284031215611b5257611b51611ad9565b5b6000611b6084828501611b27565b91505092915050565b6000819050919050565b611b7c81611b69565b82525050565b6000602082019050611b976000830184611b73565b92915050565b611ba681611b69565b8114611bb157600080fd5b50565b600081359050611bc381611b9d565b92915050565b60008060408385031215611be057611bdf611ad9565b5b6000611bee85828601611bb4565b9250506020611bff85828601611bb4565b9150509250929050565b600060208284031215611c1f57611c1e611ad9565b5b6000611c2d84828501611bb4565b91505092915050565b6000819050919050565b6000611c5b611c56611c5184611ade565b611c36565b611ade565b9050919050565b6000611c6d82611c40565b9050919050565b6000611c7f82611c62565b9050919050565b611c8f81611c74565b82525050565b6000602082019050611caa6000830184611c86565b92915050565b60008060408385031215611cc757611cc6611ad9565b5b6000611cd585828601611b27565b9250506020611ce685828601611bb4565b9150509250929050565b611cf981611afe565b82525050565b6000602082019050611d146000830184611cf0565b92915050565b60008115159050919050565b611d2f81611d1a565b82525050565b6000602082019050611d4a6000830184611d26565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d8a82611b69565b9150611d9583611b69565b9250828203905081811115611dad57611dac611d50565b5b92915050565b6000611dbe82611b69565b9150611dc983611b69565b9250828202611dd781611b69565b91508282048414831517611dee57611ded611d50565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611e2f82611b69565b9150611e3a83611b69565b925082611e4a57611e49611df5565b5b828204905092915050565b6000611e6082611b69565b9150611e6b83611b69565b9250828201905080821115611e8357611e82611d50565b5b92915050565b600082825260208201905092915050565b7f6e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b6000611ed0600e83611e89565b9150611edb82611e9a565b602082019050919050565b60006020820190508181036000830152611eff81611ec3565b9050919050565b7f6e6f7420656e6f7567682066756e647320696e20636f6e747261637400000000600082015250565b6000611f3c601c83611e89565b9150611f4782611f06565b602082019050919050565b60006020820190508181036000830152611f6b81611f2f565b9050919050565b7f7265776172642072617465203d20300000000000000000000000000000000000600082015250565b6000611fa8600f83611e89565b9150611fb382611f72565b602082019050919050565b60006020820190508181036000830152611fd781611f9b565b9050919050565b600081519050611fed81611b9d565b92915050565b60006020828403121561200957612008611ad9565b5b600061201784828501611fde565b91505092915050565b7f72657761726420616d6f756e74203e2062616c616e6365000000000000000000600082015250565b6000612056601783611e89565b915061206182612020565b602082019050919050565b6000602082019050818103600083015261208581612049565b9050919050565b7f616d6f756e74203d203000000000000000000000000000000000000000000000600082015250565b60006120c2600a83611e89565b91506120cd8261208c565b602082019050919050565b600060208201905081810360008301526120f1816120b5565b9050919050565b600060408201905061210d6000830185611cf0565b61211a6020830184611b73565b9392505050565b61212a81611d1a565b811461213557600080fd5b50565b60008151905061214781612121565b92915050565b60006020828403121561216357612162611ad9565b5b600061217184828501612138565b91505092915050565b7f5769746864726177206661696c65640000000000000000000000000000000000600082015250565b60006121b0600f83611e89565b91506121bb8261217a565b602082019050919050565b600060208201905081810360008301526121df816121a3565b9050919050565b7f43616e6e6f7420776974686472617720746865207374616b696e6720746f6b6560008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000612242602183611e89565b915061224d826121e6565b604082019050919050565b6000602082019050818103600083015261227181612235565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006122b282611b69565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036122e4576122e3611d50565b5b600182019050919050565b7f546f6f206d756368207374616b65642100000000000000000000000000000000600082015250565b6000612325601083611e89565b9150612330826122ef565b602082019050919050565b6000602082019050818103600083015261235481612318565b9050919050565b7f4d6178696d756d206e756d626572206f6620746f6b656e73207374616b65642060008201527f686173206265656e207265616368656421000000000000000000000000000000602082015250565b60006123b7603183611e89565b91506123c28261235b565b604082019050919050565b600060208201905081810360008301526123e6816123aa565b9050919050565b60006060820190506124026000830186611cf0565b61240f6020830185611cf0565b61241c6040830184611b73565b949350505050565b7f576974686472617720726577617264206661696c656400000000000000000000600082015250565b600061245a601683611e89565b915061246582612424565b602082019050919050565b600060208201905081810360008301526124898161244d565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006124c6601f83611e89565b91506124d182612490565b602082019050919050565b600060208201905081810360008301526124f5816124b9565b905091905056fea26469706673582212208a0c9cc51e81925ef2fb99b185b7c94a6f3ebc713f94cdc30609dadcb9a4f85264736f6c63430008120033";

type StakingRewardsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingRewardsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakingRewards__factory extends ContractFactory {
  constructor(...args: StakingRewardsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _stakingToken: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StakingRewards> {
    return super.deploy(
      _stakingToken,
      _rewardToken,
      overrides || {}
    ) as Promise<StakingRewards>;
  }
  override getDeployTransaction(
    _stakingToken: PromiseOrValue<string>,
    _rewardToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakingToken,
      _rewardToken,
      overrides || {}
    );
  }
  override attach(address: string): StakingRewards {
    return super.attach(address) as StakingRewards;
  }
  override connect(signer: Signer): StakingRewards__factory {
    return super.connect(signer) as StakingRewards__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingRewardsInterface {
    return new utils.Interface(_abi) as StakingRewardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingRewards {
    return new Contract(address, _abi, signerOrProvider) as StakingRewards;
  }
}
